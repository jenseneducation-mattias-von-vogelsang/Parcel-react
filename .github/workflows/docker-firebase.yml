# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Test & Build Docker Container

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment variables
        run: |
          # skapar variabel
          echo "::set-env name=SHORT_SHA::$(echo ${GITHUB_SHA::7})"
          echo "::set-env name=BRANCH::$(echo ${GITHUB_REF##*/})"
      - name: Concatenate environment varibles
        run: |
          echo "::set-env name=IMAGE_TAGS::${SHORT_SHA}"
          #skapar variabel för repositopry och unika commit id
      - name: Tag latest Docker image
        # om man pushar till masterbranchen ska man tagga dockerimage med en latest, för att kunna se senaste dockerimagen i dockerhub
        if: env.BRANCH == 'master'
        run: echo "::set-env name=IMAGE_TAGS::${IMAGE_TAGS},latest"


        # måste göra en checkout för att klona repo för att komma åt filen docker. Docker ger i sin tur angivna instruktioner.
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build & Publish Docker image
        uses: whoan/docker-build-with-cache-action@v5
        with:
          #secrets är en encrypted variabel sparad i github. Konfigurerad med docker inlog/pw
          username: "${{ secrets.DOCKER_HUB_USERNAME }}"
          password: "${{ secrets.DOCKER_HUB_PASSWORD }}"
          image_name: "${{ secrets.DOCKER_HUB_USERNAME }}/parcel-react"
          image_tag: "${{ env.IMAGE_TAGS }}"

      - name: Checkout Repo for Firebase
        uses: actions/checkout@master
      - name: Install Dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Archive Production Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist
      deploy:
      name: Deploy
        needs: build
              runs-on: ubuntu-latest
              steps:
                - name: Checkout Repo
                  uses: actions/checkout@master
                - name: Download Artifact
                  uses: actions/download-artifact@master
                  with:
                    name: dist
                    path: dist
                - name: Deploy to Firebase
                  uses: w9jds/firebase-action@master
                  with:
                    args: deploy --only hosting
                  env:
                    FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
